
see scripts/todo.text for more recent notes

 OLD -------------------------------------------------------------------------

(2007:fall:early)
  * implement market
  * get libraries to compile in server

(2007:summer:late)
  * get libraries working
    * improve feedback
      * implement problem market
  * get pretty to parse numbers: 2=W B, 3=S B 2, 4=S B 3,...

(2007:summer)
  * revise usage of corpus and its total weight, e.g.,
    perhaps each module should be normalized to 1, or
    count only defs, not axms & thms (once a real library is available).
  * clean up libraries, build a database, analyse it.
    * repair conjecturing
  * calculate effective size of database
  * clean up statistical physics:
    * incorporate temperature into the language?
    * work out fermi statistics

(2007:spring)
  * implement FOL using if_error (following (2006:05-06) below)
    * firm up definitions of code, eval, and if_error (in scripts)
      * define beta,eta reduction of codes (in scripts)
      * fix quoting:
        ###[
          eval0 "S" = K S
          eval0 "K" = K K
          eval0 "J" = K J
          eval0 "x y" = S (eval0 "x") (eval0 "y")
          eval0 "if_error" = if_error_type
          eval = eval0;<if_error>
          \"x"."e" = \x:code. app "\x.e" x
        ###]
    * implement if_error axiom enforcement
    * implement translation from FOL to if_error terms (in cpp)

(2007:01)
  * complexity calculations for proofs
    * fix auto-conjecturing, adding rules for mu,nu,tau,H*;
      conjunction of H* is over terms
        P(H*|-x[=y) = ???
      disjunction is via demorgan's laws?:
        P(mu,nu,tau|-phi) = 1 - ( (1-P(mu|-phi))^P_mu
                                  (1-P(nu|-phi))^P_nu
                                  (1-P(tau|-phi))^P_tau )
    * revise for proof simplification
  * parser fixes
    * generalize patterned binding
    * add patterned definitions
    * include quoted patterns

(2006:11)
  * define & implement goal-directed [=-proof search
  * get meta-theory working
    * atom initialization
    * codes: evaluation axioms and schemata
      * repair quoting
    * oracular axiom schemata
    * oracular axioms (in scripts)

(2006:08:early)
  * complexity calculations
    * look into why dZdL calculation converges so slowly no idea...
    * why does calc_Z require at least 3-4 iterations? 

(2006:07:mid)
  * add =: definitions to corpus
  * add =: definitions for reduction

(2006:05-06)
  * Implement higher recursion and representable statements
    (so that Statements merge into Expressions)

